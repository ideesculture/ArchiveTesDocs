<?php

namespace bs\IDP\BackofficeBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query;

/**
 * IDPColumnsRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class IDPColumnsRepository extends EntityRepository
{
    public function getAll( )
    {
        $querySelect = "SELECT c FROM bsIDPBackofficeBundle:IDPColumns c";
        $query = $this->getEntityManager()->createQuery($querySelect);
        return $query->getArrayResult();
    }

    public function getAllIndexedOnID( ){
        $result = [];
        $IDPColumns = $this->getAll();
        if( !$IDPColumns ) return null;

        foreach( $IDPColumns as $IDPColumn ){
            $result[$IDPColumn['id']] = $IDPColumn;
        }
        return $result;
    }

    public function getAllObjectsIndexedOnID( ){
        $result = [];
        $IDPColumns = $this->findAll();
        if( !$IDPColumns ) return null;

        foreach( $IDPColumns as $IDPColumn ){
            $result[$IDPColumn->getId()] = $IDPColumn;
        }
        return $result;
    }

    public function getAllObjectsIndexedOnFieldname( ){
        $result = [];
        $IDPColumns = $this->findAll();
        if( !$IDPColumns ) return null;

        foreach( $IDPColumns as $IDPColumn ){
            $result[$IDPColumn->getFieldname()] = $IDPColumn;
        }
        return $result;
    }

    public function countIDPUserColumnsSettings( ){

        $queryStr = 'SELECT COUNT(c.id) ';
        $queryStr .= ' FROM bsIDPBackofficeBundle:IDPColumns c ';

        $query = $this->getEntityManager()->createQuery( $queryStr );

        return $query->getSingleScalarResult();
    }
}
