<?php

namespace bs\IDP\BackofficeBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query;

/**
 * IDPServicesRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class IDPServicesRepository extends EntityRepository
{
    public function findAll()
    {
        return $this->findBy(array(), array('longname' => 'ASC'));
    }

	public function getAll( )
	{
		$querySelect = "SELECT s FROM bsIDPBackofficeBundle:IDPServices s";
		$query = $this->getEntityManager()->createQuery($querySelect);
		return $query->getArrayResult();
	}

    public function getAllIndexedOnID( ){
        $result = [];
        $services = $this->getAll();
        if( !$services ) return null;

        foreach( $services as $service ){
            $result[$service['id']] = $service;
        }
        return $result;
    }

	public function countServices( $search ){

		$queryStr = 'SELECT COUNT(s.id) ';
		$queryStr .= ' FROM bsIDPBackofficeBundle:IDPServices s ';
        if( $search )
            $queryStr .= " WHERE s.longname LIKE '%$search%' ";

		$query = $this->getEntityManager()->createQuery( $queryStr );

		return $query->getSingleScalarResult();
	}

	public function loadServicesDatas( $search, $sort, $order, $limit, $offset ){
		$queryStr = 'SELECT s ';
		$queryStr .= ' FROM bsIDPBackofficeBundle:IDPServices s ';
        if( $search )
            $queryStr .= " WHERE s.longname LIKE '%$search%' ";
		$queryStr .= " ORDER BY s.$sort $order ";

		$query = $this->getEntityManager()
			->createQuery( $queryStr );
		if( $limit > 0 )
			$query->setMaxResults( $limit );

		$query->setFirstResult( $offset )
			->setHint(Query::HINT_INCLUDE_META_COLUMNS, true);

		return $query->getResult();
	}
}
