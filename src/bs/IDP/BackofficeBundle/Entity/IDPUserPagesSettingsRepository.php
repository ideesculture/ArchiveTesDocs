<?php

namespace bs\IDP\BackofficeBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query;

/**
 * IDPUserPagesSettingsRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class IDPUserPagesSettingsRepository extends EntityRepository
{
    public function getAll( )
    {
        $querySelect = "SELECT u FROM bsIDPBackofficeBundle:IDPUserPagesSettings u";
        $query = $this->getEntityManager()->createQuery($querySelect);
        return $query->getArrayResult();
    }

    public function getAllIndexedOnID( ){
        $result = [];
        $IDPUserPagesSettings = $this->getAll();
        if( !$IDPUserPagesSettings ) return null;

        foreach( $IDPUserPagesSettings as $IDPUserPageSettings ){
            $result[$IDPUserPageSettings['id']] = $IDPUserPageSettings;
        }
        return $result;
    }

    public function countIDPUserPagesSettings( ){

        $queryStr = 'SELECT COUNT(u.id) ';
        $queryStr .= ' FROM bsIDPBackofficeBundle:IDPUserPagesSettings u ';

        $query = $this->getEntityManager()->createQuery( $queryStr );

        return $query->getSingleScalarResult();
    }

    public function getOne( $page_id, $user_id ){
        $queryStr = "SELECT u FROM bsIDPBackofficeBundle:IDPUserPagesSettings u WHERE u.page_id=$page_id AND u.user_id=$user_id";
        $query = $this->getEntityManager()->createQuery($queryStr)
            ->setHint(Query::HINT_INCLUDE_META_COLUMNS, true);
        return $query->getArrayResult();
    }

    public function modifyPage( $user_id, $page_id, $field, $new_value ){
        $queryStr = "UPDATE bsIDPBackofficeBundle:IDPUserPagesSettings u ";
        $whereStr = " WHERE u.user_id='$user_id' AND u.page_id='$page_id'";
        $setStr = "";
        switch( $field ){
            case IDPUserPagesSettings::USER_SETTINGS_MODIF_PAGE_ARRAY_TYPE_LIST:
                $setStr = " SET u.array_type_list = $new_value ";
                break;
            case IDPUserPagesSettings::USER_SETTINGS_MODIF_PAGE_NB_ROW_PER_PAGE:
                $setStr = " SET u.nb_row_per_page = $new_value ";
                break;
        }
        $queryStr .= $setStr . $whereStr;

        $query = $this->getEntityManager( )->createQuery( $queryStr );

        return $query->getResult();
    }

}
